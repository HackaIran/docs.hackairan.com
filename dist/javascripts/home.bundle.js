!function(e){var t={};function i(n){if(t[n])return t[n].exports;var r=t[n]={i:n,l:!1,exports:{}};return e[n].call(r.exports,r,r.exports,i),r.l=!0,r.exports}i.m=e,i.c=t,i.d=function(e,t,n){i.o(e,t)||Object.defineProperty(e,t,{configurable:!1,enumerable:!0,get:n})},i.r=function(e){Object.defineProperty(e,"__esModule",{value:!0})},i.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return i.d(t,"a",t),t},i.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},i.p="",i(i.s="./client/bundles/home/index.js")}({"./client/bundles/home/index.js":
/*!**************************************!*\
  !*** ./client/bundles/home/index.js ***!
  \**************************************/
/*! no static exports found */function(e,t,i){"use strict";var n=function(){function e(e,t){for(var i=0;i<t.length;i++){var n=t[i];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}return function(t,i,n){return i&&e(t.prototype,i),n&&e(t,n),t}}();new(function(){function e(){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.initializeSearchBox(),this.initializeDocumentsList(),this.initializeHotKeys()}return n(e,[{key:"initializeHotKeys",value:function(){var e=this;window.addEventListener("keydown",function(t){var i=["Digit1","Digit2","Digit3"];t.altKey&&i.includes(t.code)&&e.columnsPreview(parseInt(i.indexOf(t.code))+1)})}},{key:"columnsPreview",value:function(e){console.log(e);for(var t=1;t<=3;t++)$("body").classList.remove("divide-"+t);$("body").classList.add("divide-"+e)}},{key:"initializeDocumentsList",value:function(){var e=$$("body > div.column.titles > ul > li"),t=this,i=!0,n=!1,r=void 0;try{for(var o,a=e[Symbol.iterator]();!(i=(o=a.next()).done);i=!0){o.value.onclick=function(){t.selectDocument(this.getAttribute("data-id"))}}}catch(e){n=!0,r=e}finally{try{!i&&a.return&&a.return()}finally{if(n)throw r}}}},{key:"selectDocument",value:function(e){var t=$$("body > div.column.titles > ul > li"),i=!0,n=!1,r=void 0;try{for(var o,a=t[Symbol.iterator]();!(i=(o=a.next()).done);i=!0){var l=o.value;l.getAttribute("data-id")===e?l.classList.add("active"):l.classList.remove("active")}}catch(e){n=!0,r=e}finally{try{!i&&a.return&&a.return()}finally{if(n)throw r}}}},{key:"initializeSearchBox",value:function(){this.searchBox=$(".search-documents"),this.searchBox.onchange=this.searchBox.onkeyup=this.doSearch.bind(this)}},{key:"doSearch",value:function(){var e=this.searchBox.value.toLowerCase(),t=$$("body > div.column.titles > ul > li"),i=!0,n=!1,r=void 0;try{for(var o,a=t[Symbol.iterator]();!(i=(o=a.next()).done);i=!0){o.value.classList.remove("hidden")}}catch(e){n=!0,r=e}finally{try{!i&&a.return&&a.return()}finally{if(n)throw r}}var l=!0,c=!1,u=void 0;try{for(var s,d=t[Symbol.iterator]();!(l=(s=d.next()).done);l=!0){var f=s.value;f.innerText.toLowerCase().includes(e)||f.classList.add("hidden")}}catch(e){c=!0,u=e}finally{try{!l&&d.return&&d.return()}finally{if(c)throw u}}}}]),e}())}});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,