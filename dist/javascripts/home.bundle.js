!function(e){var t={};function i(n){if(t[n])return t[n].exports;var o=t[n]={i:n,l:!1,exports:{}};return e[n].call(o.exports,o,o.exports,i),o.l=!0,o.exports}i.m=e,i.c=t,i.d=function(e,t,n){i.o(e,t)||Object.defineProperty(e,t,{configurable:!1,enumerable:!0,get:n})},i.r=function(e){Object.defineProperty(e,"__esModule",{value:!0})},i.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return i.d(t,"a",t),t},i.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},i.p="",i(i.s="./client/bundles/home/index.js")}({"./client/bundles/home/index.js":
/*!**************************************!*\
  !*** ./client/bundles/home/index.js ***!
  \**************************************/
/*! no static exports found */function(e,t,i){"use strict";var n=function(){function e(e,t){for(var i=0;i<t.length;i++){var n=t[i];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}return function(t,i,n){return i&&e(t.prototype,i),n&&e(t,n),t}}();new(function(){function e(){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.initializeSearchBox(),this.initializeDocumentsList(),this.initializeHotKeys()}return n(e,[{key:"initializeHotKeys",value:function(){window.addEventListener("keydown",function(e){e.altKey&&["Digit1","Digit2","Digit3"].includes(e.code)&&(document.body.classList.remove("one"),document.body.classList.remove("two"),"Digit1"===e.code&&document.body.classList.add("one"),"Digit2"===e.code&&document.body.classList.add("two"))})}},{key:"initializeDocumentsList",value:function(){var e=$$("body > div.column.titles > ul > li"),t=this,i=!0,n=!1,o=void 0;try{for(var r,a=e[Symbol.iterator]();!(i=(r=a.next()).done);i=!0){r.value.onclick=function(){t.selectDocument(this.getAttribute("data-id"))}}}catch(e){n=!0,o=e}finally{try{!i&&a.return&&a.return()}finally{if(n)throw o}}}},{key:"selectDocument",value:function(e){var t=$$("body > div.column.titles > ul > li"),i=!0,n=!1,o=void 0;try{for(var r,a=t[Symbol.iterator]();!(i=(r=a.next()).done);i=!0){var c=r.value;c.getAttribute("data-id")===e?c.classList.add("active"):c.classList.remove("active")}}catch(e){n=!0,o=e}finally{try{!i&&a.return&&a.return()}finally{if(n)throw o}}}},{key:"initializeSearchBox",value:function(){this.searchBox=$(".search-documents"),this.searchBox.onchange=this.searchBox.onkeyup=this.doSearch.bind(this)}},{key:"doSearch",value:function(){var e=this.searchBox.value.toLowerCase(),t=$$("body > div.column.titles > ul > li"),i=!0,n=!1,o=void 0;try{for(var r,a=t[Symbol.iterator]();!(i=(r=a.next()).done);i=!0){r.value.classList.remove("hidden")}}catch(e){n=!0,o=e}finally{try{!i&&a.return&&a.return()}finally{if(n)throw o}}var c=!0,l=!1,u=void 0;try{for(var s,d=t[Symbol.iterator]();!(c=(s=d.next()).done);c=!0){var f=s.value;f.innerText.toLowerCase().includes(e)||f.classList.add("hidden")}}catch(e){l=!0,u=e}finally{try{!c&&d.return&&d.return()}finally{if(l)throw u}}}}]),e}())}});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,